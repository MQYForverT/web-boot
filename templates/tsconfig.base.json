{
	"compilerOptions": {
		// 指定ECMAScript目标版本
		"target": "ESNext",
		"sourceMap": false,
		// 产物不消除注释
		"removeComments": false,
		"useDefineForClassFields": true,
		// 用于指定在导入默认导出时是否应将其转换为具名导出或命名空间导入
		"esModuleInterop": true,
		// 与 esModuleInterop: true 配合允许从 commonjs 的依赖中直接按 import XX from 'xxx' 的方式导出 default 模块
		"allowSyntheticDefaultImports": true,
		"strictNullChecks": true,
		"forceConsistentCasingInFileNames": true,
		// 指定生成哪个模块系统代码
		"module": "ESNext",
		"lib": [],
		// 忽略所有的声明文件（ *.d.ts）的类型检查
		"skipLibCheck": true,
		// 强制对Types使用“import type”而不是“import”
		"verbatimModuleSyntax": true,
		/* Bundler mode */
		// 用于选择模块解析策略，有'node'和'bundler'两种类型
		"moduleResolution": "bundler",
		"allowImportingTsExtensions": true,
		// 允许引入 .json 模块
		"resolveJsonModule": true,
		// 在使用 const enum 或隐式类型导入时受到 TypeScript 的警告
		"isolatedModules": true,
		"noEmit": true,
		// 指定 jsx 代码的生成: 'preserve', 'react-native', or 'react'
		"jsx": "preserve",
		// 开启了 TypeScript 对装饰器语法的支持
		"experimentalDecorators": true,
		// 允许 TypeScript 为装饰器生成元数据
		"emitDecoratorMetadata": true,

		/* Linting */
		// 启用所有严格类型检查选项。
		// 启用 --strict相当于启用 --noImplicitAny, --noImplicitThis, --alwaysStrict，
		// --strictNullChecks和 --strictFunctionTypes和--strictPropertyInitialization。
		"strict": true,
		// 默认false,是否检测定义了但是没使用的变量
		"noUnusedLocals": true,
		// 用于检查是否有在函数体中没有使用的参数
		"noUnusedParameters": true,
		// 用于检查switch中是否有case没有使用break跳出switch
		"noFallthroughCasesInSwitch": true,
		// 解析非相对模块名的基准目录
		"baseUrl": "."
	}
}
